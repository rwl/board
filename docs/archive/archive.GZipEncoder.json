{"name":"GZipEncoder","qualifiedName":"archive/archive.GZipEncoder","comment":"","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"DEFLATE":{"name":"DEFLATE","qualifiedName":"archive/archive.GZipEncoder.DEFLATE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"FLAG_COMMENT":{"name":"FLAG_COMMENT","qualifiedName":"archive/archive.GZipEncoder.FLAG_COMMENT","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"FLAG_EXTRA":{"name":"FLAG_EXTRA","qualifiedName":"archive/archive.GZipEncoder.FLAG_EXTRA","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"FLAG_HCRC":{"name":"FLAG_HCRC","qualifiedName":"archive/archive.GZipEncoder.FLAG_HCRC","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"FLAG_NAME":{"name":"FLAG_NAME","qualifiedName":"archive/archive.GZipEncoder.FLAG_NAME","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"FLAG_TEXT":{"name":"FLAG_TEXT","qualifiedName":"archive/archive.GZipEncoder.FLAG_TEXT","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_ACORN_RISCOS":{"name":"OS_ACORN_RISCOS","qualifiedName":"archive/archive.GZipEncoder.OS_ACORN_RISCOS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_AMIGA":{"name":"OS_AMIGA","qualifiedName":"archive/archive.GZipEncoder.OS_AMIGA","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_ATARI_TOS":{"name":"OS_ATARI_TOS","qualifiedName":"archive/archive.GZipEncoder.OS_ATARI_TOS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_CP_M":{"name":"OS_CP_M","qualifiedName":"archive/archive.GZipEncoder.OS_CP_M","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_FAT":{"name":"OS_FAT","qualifiedName":"archive/archive.GZipEncoder.OS_FAT","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_HPFS":{"name":"OS_HPFS","qualifiedName":"archive/archive.GZipEncoder.OS_HPFS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_MACINTOSH":{"name":"OS_MACINTOSH","qualifiedName":"archive/archive.GZipEncoder.OS_MACINTOSH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_NTFS":{"name":"OS_NTFS","qualifiedName":"archive/archive.GZipEncoder.OS_NTFS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_QDOS":{"name":"OS_QDOS","qualifiedName":"archive/archive.GZipEncoder.OS_QDOS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_TOPS_20":{"name":"OS_TOPS_20","qualifiedName":"archive/archive.GZipEncoder.OS_TOPS_20","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_UNIX":{"name":"OS_UNIX","qualifiedName":"archive/archive.GZipEncoder.OS_UNIX","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_UNKNOWN":{"name":"OS_UNKNOWN","qualifiedName":"archive/archive.GZipEncoder.OS_UNKNOWN","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_VMS":{"name":"OS_VMS","qualifiedName":"archive/archive.GZipEncoder.OS_VMS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_VM_CMS":{"name":"OS_VM_CMS","qualifiedName":"archive/archive.GZipEncoder.OS_VM_CMS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"OS_Z_SYSTEM":{"name":"OS_Z_SYSTEM","qualifiedName":"archive/archive.GZipEncoder.OS_Z_SYSTEM","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"SIGNATURE":{"name":"SIGNATURE","qualifiedName":"archive/archive.GZipEncoder.SIGNATURE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"encode":{"name":"encode","qualifiedName":"archive/archive.GZipEncoder.encode","comment":"","commentFrom":"archive.GZipEncoder.encode","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"value":null,"annotations":[]},"level":{"name":"level","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"archive/archive.GZipEncoder.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>archive/archive.GZipEncoder.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"archive/archive.GZipEncoder.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"archive/archive.GZipEncoder.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>archive/archive.GZipEncoder.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>archive/archive.GZipEncoder.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"archive/archive.GZipEncoder.noSuchMethod","comment":"<p><a>archive/archive.GZipEncoder.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>archive/archive.GZipEncoder.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>archive/archive.GZipEncoder.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>archive/archive.GZipEncoder.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"archive/archive.GZipEncoder.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}