{"name":"TarFile","qualifiedName":"archive/archive.TarFile","comment":"<p>File Header (512 bytes)\n Offst Size Field</p>\n<pre><code> Pre-POSIX Header\n</code></pre>\n<p> 0     100  File name\n 100   8    File mode\n 108   8    Owner's numeric user ID\n 116   8    Group's numeric user ID\n 124   12   File size in bytes (octal basis)\n 136   12   Last modification time in numeric Unix time format (octal)\n 148   8    Checksum for header record\n 156   1    Type flag\n 157   100  Name of linked file</p>\n<pre><code> UStar Format\n</code></pre>\n<p> 257   6    UStar indicator \"ustar\"\n 263   2    UStar version \"00\"\n 265   32   Owner user name\n 297   32   Owner group name\n 329   8    Device major number\n 337   8    Device minor number\n 345   155  Filename prefix</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"TYPE_DIRECTORY":{"name":"TYPE_DIRECTORY","qualifiedName":"archive/archive.TarFile.TYPE_DIRECTORY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"TYPE_HARD_LINK":{"name":"TYPE_HARD_LINK","qualifiedName":"archive/archive.TarFile.TYPE_HARD_LINK","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"TYPE_NORMAL_FILE":{"name":"TYPE_NORMAL_FILE","qualifiedName":"archive/archive.TarFile.TYPE_NORMAL_FILE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"TYPE_SYMBOLIC_LINK":{"name":"TYPE_SYMBOLIC_LINK","qualifiedName":"archive/archive.TarFile.TYPE_SYMBOLIC_LINK","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"checksum":{"name":"checksum","qualifiedName":"archive/archive.TarFile.checksum","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"deviceMajorNumber":{"name":"deviceMajorNumber","qualifiedName":"archive/archive.TarFile.deviceMajorNumber","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"deviceMinorNumber":{"name":"deviceMinorNumber","qualifiedName":"archive/archive.TarFile.deviceMinorNumber","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"fileSize":{"name":"fileSize","qualifiedName":"archive/archive.TarFile.fileSize","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"filename":{"name":"filename","qualifiedName":"archive/archive.TarFile.filename","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"filenamePrefix":{"name":"filenamePrefix","qualifiedName":"archive/archive.TarFile.filenamePrefix","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"groupId":{"name":"groupId","qualifiedName":"archive/archive.TarFile.groupId","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"lastModTime":{"name":"lastModTime","qualifiedName":"archive/archive.TarFile.lastModTime","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"mode":{"name":"mode","qualifiedName":"archive/archive.TarFile.mode","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"nameOfLinkedFile":{"name":"nameOfLinkedFile","qualifiedName":"archive/archive.TarFile.nameOfLinkedFile","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ownerGroupName":{"name":"ownerGroupName","qualifiedName":"archive/archive.TarFile.ownerGroupName","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ownerId":{"name":"ownerId","qualifiedName":"archive/archive.TarFile.ownerId","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"ownerUserName":{"name":"ownerUserName","qualifiedName":"archive/archive.TarFile.ownerUserName","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"typeFlag":{"name":"typeFlag","qualifiedName":"archive/archive.TarFile.typeFlag","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ustarIndicator":{"name":"ustarIndicator","qualifiedName":"archive/archive.TarFile.ustarIndicator","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ustarVersion":{"name":"ustarVersion","qualifiedName":"archive/archive.TarFile.ustarVersion","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"content":{"name":"content","qualifiedName":"archive/archive.TarFile.content","comment":"","commentFrom":"archive.TarFile.content","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{},"annotations":[]},"isFile":{"name":"isFile","qualifiedName":"archive/archive.TarFile.isFile","comment":"","commentFrom":"archive.TarFile.isFile","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"size":{"name":"size","qualifiedName":"archive/archive.TarFile.size","comment":"","commentFrom":"archive.TarFile.size","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"archive/archive.TarFile.TarFile-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"read":{"name":"read","qualifiedName":"archive/archive.TarFile.TarFile-read","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"input":{"name":"input","optional":false,"named":false,"default":false,"type":[{"outer":"archive/archive.InputStream","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"toString":{"name":"toString","qualifiedName":"archive/archive.TarFile.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"write":{"name":"write","qualifiedName":"archive/archive.TarFile.write","comment":"","commentFrom":"archive.TarFile.write","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"output":{"name":"output","optional":false,"named":false,"default":false,"type":[{"outer":"archive/archive.OutputStream","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"archive/archive.TarFile.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>archive/archive.TarFile.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"archive/archive.TarFile.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"archive/archive.TarFile.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>archive/archive.TarFile.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>archive/archive.TarFile.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"archive/archive.TarFile.noSuchMethod","comment":"<p><a>archive/archive.TarFile.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>archive/archive.TarFile.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>archive/archive.TarFile.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>archive/archive.TarFile.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"archive/archive.TarFile.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}