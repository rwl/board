{"name":"AnalysisErrorWithProperties","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties","comment":"<p>Instances of the class <code>AnalysisErrorWithProperties</code></p>","isAbstract":false,"superclass":"analyzer/analyzer.AnalysisError","implements":[],"subclass":[],"variables":{},"inheritedVariables":{"errorCode":{"name":"errorCode","qualifiedName":"analyzer/analyzer.AnalysisError.errorCode","comment":"<p>The error code associated with the error.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"analyzer/analyzer.ErrorCode","inner":[]}],"annotations":[]},"isStaticOnly":{"name":"isStaticOnly","qualifiedName":"analyzer/analyzer.AnalysisError.isStaticOnly","comment":"<p>A flag indicating whether this error can be shown to be a non-issue because of the result of\ntype propagation.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[]},"source":{"name":"source","qualifiedName":"analyzer/analyzer.AnalysisError.source","comment":"<p>The source in which the error occurred, or <code>null</code> if unknown.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"analyzer/engine-source.Source","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{},"constructors":{"con1":{"name":"con1","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.AnalysisErrorWithProperties-con1","comment":"<p>Initialize a newly created analysis error for the specified source. The error has no location\ninformation.</p>\n<p>@param source the source for which the exception occurred\n@param errorCode the error code to be associated with this error\n@param arguments the arguments used to build the error message</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"source":{"name":"source","optional":false,"named":false,"default":false,"type":[{"outer":"analyzer/engine-source.Source","inner":[]}],"value":null,"annotations":[]},"errorCode":{"name":"errorCode","optional":false,"named":false,"default":false,"type":[{"outer":"analyzer/analyzer.ErrorCode","inner":[]}],"value":null,"annotations":[]},"arguments":{"name":"arguments","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.Object","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"con2":{"name":"con2","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.AnalysisErrorWithProperties-con2","comment":"<p>Initialize a newly created analysis error for the specified source at the given location.</p>\n<p>@param source the source for which the exception occurred\n@param offset the offset of the location of the error\n@param length the length of the location of the error\n@param errorCode the error code to be associated with this error\n@param arguments the arguments used to build the error message</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"source":{"name":"source","optional":false,"named":false,"default":false,"type":[{"outer":"analyzer/engine-source.Source","inner":[]}],"value":null,"annotations":[]},"offset":{"name":"offset","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"length":{"name":"length","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"errorCode":{"name":"errorCode","optional":false,"named":false,"default":false,"type":[{"outer":"analyzer/analyzer.ErrorCode","inner":[]}],"value":null,"annotations":[]},"arguments":{"name":"arguments","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.Object","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"getProperty":{"name":"getProperty","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.getProperty","comment":"<p>Return the value of the given property, or <code>null</code> if the given property is not defined\nfor this error.</p>\n<p>@param property the property whose value is to be returned\n@return the value of the given property</p>","commentFrom":"analyzer.AnalysisError.getProperty","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Object","inner":[]}],"parameters":{"property":{"name":"property","optional":false,"named":false,"default":false,"type":[{"outer":"analyzer/analyzer.ErrorProperty","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"analyzer/dart-core.override","parameters":[]}]},"setProperty":{"name":"setProperty","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.setProperty","comment":"<p>Set the value of the given property to the given value. Using a value of <code>null</code> will\neffectively remove the property from this error.</p>\n<p>@param property the property whose value is to be returned\n@param value the new value of the given property</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"property":{"name":"property","optional":false,"named":false,"default":false,"type":[{"outer":"analyzer/analyzer.ErrorProperty","inner":[]}],"value":null,"annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"correction":{"name":"correction","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.correction","comment":"<p>Return the correction to be displayed for this error, or <code>null</code> if there is no correction\ninformation for this error. The correction should indicate how the user can fix the error.</p>\n<p>@return the template used to create the correction to be displayed for this error</p>","commentFrom":"","inheritedFrom":"analyzer.AnalysisError.correction","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>analyzer/analyzer.AnalysisErrorWithProperties.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"dart-core.Object.hashCode","inheritedFrom":"analyzer.AnalysisError.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[{"name":"analyzer/dart-core.override","parameters":[]}]},"length":{"name":"length","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.length","comment":"<p>Return the number of characters from the offset to the end of the source which encompasses the\ncompilation error.</p>\n<p>@return the length of the error location</p>","commentFrom":"","inheritedFrom":"analyzer.AnalysisError.length","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"message":{"name":"message","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.message","comment":"<p>Return the message to be displayed for this error. The message should indicate what is wrong\nand why it is wrong.</p>\n<p>@return the message to be displayed for this error</p>","commentFrom":"","inheritedFrom":"analyzer.AnalysisError.message","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"offset":{"name":"offset","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.offset","comment":"<p>Return the character offset from the beginning of the source (zero based) where the error\noccurred.</p>\n<p>@return the offset to the start of the error location</p>","commentFrom":"","inheritedFrom":"analyzer.AnalysisError.offset","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and other are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>analyzer/analyzer.AnalysisErrorWithProperties.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"analyzer.AnalysisError.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"obj":{"name":"obj","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"analyzer/dart-core.override","parameters":[]}]}},"methods":{"getProperty":{"name":"getProperty","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.getProperty","comment":"<p>Return the value of the given property, or <code>null</code> if the given property is not defined\nfor this error.</p>\n<p>@param property the property whose value is to be returned\n@return the value of the given property</p>","commentFrom":"","inheritedFrom":"analyzer.AnalysisError.getProperty","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Object","inner":[]}],"parameters":{"property":{"name":"property","optional":false,"named":false,"default":false,"type":[{"outer":"analyzer/analyzer.ErrorProperty","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.noSuchMethod","comment":"<p><a>analyzer/analyzer.AnalysisErrorWithProperties.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>analyzer/analyzer.AnalysisErrorWithProperties.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>analyzer/analyzer.AnalysisErrorWithProperties.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>analyzer/analyzer.AnalysisErrorWithProperties.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"analyzer/analyzer.AnalysisErrorWithProperties.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"analyzer.AnalysisError.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[{"name":"analyzer/dart-core.override","parameters":[]}]}}},"annotations":[],"generics":{}}