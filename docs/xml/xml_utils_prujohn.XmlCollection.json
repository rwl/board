{"name":"XmlCollection","qualifiedName":"xml/xml_utils_prujohn.XmlCollection","comment":"<p>Represents a queryable collection of <a>xml/xml_utils_prujohn.XmlNode</a> elements.</p>","isAbstract":false,"superclass":"xml/xml_utils_prujohn.ListBase","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{"length=":{"name":"length=","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.length=","comment":"<p>Changes the length of the list. If <a>xml/xml_utils_prujohn.XmlCollection.length=.newLength</a> is greater than\nthe current <a>xml/xml_utils_prujohn.XmlCollection.length</a>, entries are initialized to <code>null</code>. Throws\nan <a>dart-core.UnsupportedError</a> if the list is not extendable.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"newLength":{"name":"newLength","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"getters":{"first":{"name":"first","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.first","comment":"<p>Returns the first element.</p>\n<p>If this is empty throws a <a>dart-core.StateError</a>. Otherwise this method is\nequivalent to <code>this.elementAt(0)</code></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{},"annotations":[]},"isEmpty":{"name":"isEmpty","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.isEmpty","comment":"<p>Returns true if there is no element in this collection.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"iterator":{"name":"iterator","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.iterator","comment":"<p>Returns an <a>dart-core.Iterator</a> that iterates over this <a>dart-core.Iterable</a> object.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterator","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{},"annotations":[]},"last":{"name":"last","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.last","comment":"<p>Returns the last element.</p>\n<p>If this is empty throws a <a>dart-core.StateError</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.length","comment":"<p>Returns the number of objects in this list.</p>\n<p>The valid indices for a list are <code>0</code> through <code>length - 1</code>.</p>","commentFrom":"dart-core.List.length","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"reversed":{"name":"reversed","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.reversed","comment":"<p>Returns a reversed fixed-length view of this <a>dart-core.List</a>.</p>\n<p>The reversed list has elements in the opposite order of this list.\nIt is backed by this list, but will stop working if this list\nbecomes shorter than its current length.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{},"annotations":[]},"single":{"name":"single","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.single","comment":"<p>Returns the single element in this.</p>\n<p>If this is empty or has more than one element throws a <a>dart-core.StateError</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"[]":{"name":"[]","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.[]","comment":"<p>Returns the element at the given <a>xml/xml_utils_prujohn.XmlCollection.[].index</a> in the list or throws\nan <a>dart-core.RangeError</a> if <a>xml/xml_utils_prujohn.XmlCollection.[].index</a> is out of bounds.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"[]=":{"name":"[]=","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.[]=","comment":"<p>Sets the entry at the given <a>xml/xml_utils_prujohn.XmlCollection.[]=.index</a> in the list to <a>xml/xml_utils_prujohn.XmlCollection.[]=.value</a>.\nThrows an <a>dart-core.RangeError</a> if <a>xml/xml_utils_prujohn.XmlCollection.[]=.index</a> is out of bounds.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"add":{"name":"add","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.add","comment":"<p>Adds <a>xml/xml_utils_prujohn.XmlCollection.add.value</a> at the end of the list, extending the length by\none. Throws an <a>dart-core.UnsupportedError</a> if the list is not\nextendable.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlNode","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.addAll","comment":"<p>Appends all elements of the <a>xml/xml_utils_prujohn.XmlCollection.addAll.iterable</a> to the end of this list.\nExtends the length of the list by the number of elements in <a>xml/xml_utils_prujohn.XmlCollection.addAll.iterable</a>.\nThrows an <a>dart-core.UnsupportedError</a> if this list is not extensible.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"addLast":{"name":"addLast","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.addLast","comment":"<p>Adds value at the end of the list, extending the length by one. Throws\nan UnsupportedError if the list is not extendable.</p>\n<p>Deprecated: Use add instead.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"allElements":{"name":"allElements","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.allElements","comment":"","commentFrom":"xml_utils_prujohn.XmlCollection.allElements","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection","inner":[{"outer":"xml/xml_utils_prujohn.XmlElement","inner":[]}]}],"parameters":{},"annotations":[]},"any":{"name":"any","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.any","comment":"<p>Returns true if one element of this collection satisfies the\npredicate <a>xml/xml_utils_prujohn.XmlCollection.any.f</a>. Returns false otherwise.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"asMap":{"name":"asMap","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.asMap","comment":"<p>Returns an unmodifiable Map view of this.</p>\n<p>It has the indices of this list as keys, and the corresponding elements\nas values.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.int","inner":[]},{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{},"annotations":[]},"clear":{"name":"clear","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.clear","comment":"<p>Removes all elements in the list.</p>\n<p>The length of the list becomes zero.\nThrows an <a>dart-core.UnsupportedError</a>, and retains all elements, if the\nlength of the list cannot be changed.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"contains":{"name":"contains","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.contains","comment":"<p>Check whether the collection contains an element equal to <a>xml/xml_utils_prujohn.XmlCollection.contains.element</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"elementAt":{"name":"elementAt","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.elementAt","comment":"<p>Returns the <a>xml/xml_utils_prujohn.XmlCollection.elementAt.index</a>th element.</p>\n<p>If [this] [Iterable] has fewer than <a>xml/xml_utils_prujohn.XmlCollection.elementAt.index</a> elements throws a\n<a>dart-core.RangeError</a>.</p>\n<p>Note: if this does not have a deterministic iteration order then the\nfunction may simply return any element without any iteration if there are\nat least <a>xml/xml_utils_prujohn.XmlCollection.elementAt.index</a> elements in this.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"every":{"name":"every","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.every","comment":"<p>Returns true if every elements of this collection satisify the\npredicate <a>xml/xml_utils_prujohn.XmlCollection.every.f</a>. Returns false otherwise.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"expand":{"name":"expand","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.expand","comment":"<p>Expand each element of this <a>dart-core.Iterable</a> into zero or more elements.</p>\n<p>The resulting Iterable will run through the elements returned\nby <a>xml/xml_utils_prujohn.XmlCollection.expand.f</a> for each element of this, in order.</p>\n<p>The returned <a>dart-core.Iterable</a> is lazy, and will call <a>xml/xml_utils_prujohn.XmlCollection.expand.f</a> for each element\nof this every time it's iterated.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"firstWhere":{"name":"firstWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.firstWhere","comment":"<p>Returns the first element that satisfies the given predicate f.</p>\n<p>If none matches, the result of invoking the <a>xml/xml_utils_prujohn.XmlCollection.firstWhere.orElse</a> function is\nreturned. By default, when <a>xml/xml_utils_prujohn.XmlCollection.firstWhere.orElse</a> is <code>null</code>, a <a>dart-core.StateError</a> is\nthrown.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}},"orElse":{"name":"orElse","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{}}}},"annotations":[]},"fold":{"name":"fold","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.fold","comment":"<p>Fold a collection to a single value by iteratively combining each element\nof the collection with an existing value using the provided function.\nUse <a>xml/xml_utils_prujohn.XmlCollection.fold.initialValue</a> as the initial value, and the function <a>xml/xml_utils_prujohn.XmlCollection.fold.combine</a> to\ncreate a new value from the previous one and an element.</p>\n<p>Example of calculating the sum of a collection:</p>\n<p>  collection.fold(0, (prev, element) => prev + element);</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"initialValue":{"name":"initialValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"combine":{"name":"combine","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{"previousValue":{"name":"previousValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"forEach":{"name":"forEach","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.forEach","comment":"<p>Applies the function <a>xml/xml_utils_prujohn.XmlCollection.forEach.f</a> to each element of this collection.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"void","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"indexOf":{"name":"indexOf","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.indexOf","comment":"<p>Returns the first index of <a>xml/xml_utils_prujohn.XmlCollection.indexOf.element</a> in the list.</p>\n<p>Searches the list from index <a>xml/xml_utils_prujohn.XmlCollection.indexOf.start</a> to the length of the list.\nThe first time an element <code>e</code> is encountered so that <code>e == element</code>,\nthe index of <code>e</code> is returned.\nReturns -1 if <a>xml/xml_utils_prujohn.XmlCollection.indexOf.element</a> is not found.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]},"start":{"name":"start","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[]},"insert":{"name":"insert","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.insert","comment":"<p>Inserts the element at position <a>xml/xml_utils_prujohn.XmlCollection.insert.index</a> in the list.</p>\n<p>This increases the length of the list by one and shifts all later elements\ntowards the end of the list.</p>\n<p>It is an error if the <a>xml/xml_utils_prujohn.XmlCollection.insert.index</a> does not point inside the list or at the\nposition after the last element.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"insertRange":{"name":"insertRange","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.insertRange","comment":"<p>Inserts a new range into the list, starting from <a>xml/xml_utils_prujohn.XmlCollection.insertRange.start</a> to\n<code>start + length - 1</code>. The entries are filled with <a>xml/xml_utils_prujohn.XmlCollection.insertRange.fill</a>.\nThrows an <a>dart-core.UnsupportedError</a> if the list is\nnot extendable.\nIf <a>xml/xml_utils_prujohn.XmlCollection.insertRange.length</a> is 0, this method does not do anything.\nIf <a>xml/xml_utils_prujohn.XmlCollection.insertRange.start</a> is the length of the list, this method inserts the\nrange at the end of the list.\nThrows an <a>dart-core.ArgumentError</a> if <a>xml/xml_utils_prujohn.XmlCollection.insertRange.length</a> is negative.\nThrows an <a>dart-core.RangeError</a> if <a>xml/xml_utils_prujohn.XmlCollection.insertRange.start</a> is negative or if\n<a>xml/xml_utils_prujohn.XmlCollection.insertRange.start</a> is greater than the length of the list.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"length":{"name":"length","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"fill":{"name":"fill","optional":true,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"join":{"name":"join","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.join","comment":"<p>Convert each element to a <a>dart-core.String</a> and concatenate the strings.</p>\n<p>Converts each element to a <a>dart-core.String</a> by calling <a>xml/dart-core.Object.toString</a> on it.\nThen concatenates the strings, optionally separated by the <a>xml/xml_utils_prujohn.XmlCollection.join.separator</a>\nstring.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"separator":{"name":"separator","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lastIndexOf":{"name":"lastIndexOf","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.lastIndexOf","comment":"<p>Returns the last index of <a>xml/xml_utils_prujohn.XmlCollection.lastIndexOf.element</a> in the list.</p>\n<p>Searches the list backwards from index <a href=\"inclusive\">start</a> to 0.\nThe first time an element <code>e</code> is encountered so that <code>e == element</code>,\nthe index of <code>e</code> is returned.\nIf start is not provided, it defaults to <code>this.length - 1</code> .\nReturns -1 if <a>xml/xml_utils_prujohn.XmlCollection.lastIndexOf.element</a> is not found.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]},"start":{"name":"start","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lastWhere":{"name":"lastWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.lastWhere","comment":"<p>Returns the last element that satisfies the given predicate f.</p>\n<p>If none matches, the result of invoking the <a>xml/xml_utils_prujohn.XmlCollection.lastWhere.orElse</a> function is\nreturned. By default, when <a>xml/xml_utils_prujohn.XmlCollection.lastWhere.orElse</a> is <code>null</code>, a <a>dart-core.StateError</a> is\nthrown.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}},"orElse":{"name":"orElse","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{}}}},"annotations":[]},"map":{"name":"map","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.map","comment":"<p>Returns a lazy <a>dart-core.Iterable</a> where each element <code>e</code> of this is replaced\nby the result of <code>f(e)</code>.</p>\n<p>This method returns a view of the mapped elements. As long as the\nreturned <a>dart-core.Iterable</a> is not iterated over, the supplied function <a>xml/xml_utils_prujohn.XmlCollection.map.f</a> will\nnot be invoked. The transformed elements will not be cached. Iterating\nmultiple times over the the returned <a>dart-core.Iterable</a> will invoke the supplied\nfunction <a>xml/xml_utils_prujohn.XmlCollection.map.f</a> multiple times on the same element.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"query":{"name":"query","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.query","comment":"<p>Returns the first node in the tree that matches the given <a>xml/xml_utils_prujohn.XmlCollection.query.queryOn</a>\nparameter.</p>\n<h2>Usage</h2><ul><li>query('tagName') // returns first occurance matching tag name.</li><li>\n<p>query(XmlNodeType.CDATA) // returns first occurance of element matching\nthe given node type (CDATA node in this example).</p></li><li>\n<p>query({'attributeName':'attributeValue'}) // returns the first occurance\nof any <a>xml/xml_utils_prujohn.XmlElement</a> where the given attributes/values are found.</p></li></ul>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"queryOn":{"name":"queryOn","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"queryAll":{"name":"queryAll","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.queryAll","comment":"<p>Returns a list of nodes in the tree that match the given <a>xml/xml_utils_prujohn.XmlCollection.queryAll.queryOn</a>\nparameter.</p>\n<h2>Usage</h2><ul><li>query('tagName') = returns first occurance matching tag name.</li><li>\n<p>query(XmlNodeType.CDATA) // returns first occurance of element matching\nthe given node type (CDATA node in this example).</p></li></ul>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"queryOn":{"name":"queryOn","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"reduce":{"name":"reduce","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.reduce","comment":"<p>Reduces a collection to a single value by iteratively combining elements\nof the collection using the provided function.</p>\n<p>Example of calculating the sum of an iterable:</p>\n<pre><code>iterable.reduce((value, element) =&gt; value + element);\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"combine":{"name":"combine","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{"previousValue":{"name":"previousValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"remove":{"name":"remove","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.remove","comment":"<p>Adds an element to this collection.</p>\n<p>Adds all of elements to this collection.</p>\n<p>Equivalent to adding each element in elements using <a>xml/xml_utils_prujohn.XmlCollection.add</a>,\nbut some collections may be able to optimize it.</p>\n<p>Removes an instance of <a>xml/xml_utils_prujohn.XmlCollection.remove.element</a> from this collection.</p>\n<p>This removes only one instance of the element for collections that can\ncontain the same element more than once (e.g., <a>dart-core.List</a>). Which instance\nis removed is decided by the collection.</p>\n<p>Has no effect if the elements is not in this collection.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeAll":{"name":"removeAll","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeAll","comment":"<p>Removes all of <a>xml/xml_utils_prujohn.XmlCollection.removeAll.elements</a> from this collection.</p>\n<p>Equivalent to calling <a>xml/xml_utils_prujohn.XmlCollection.remove</a> once for each element in\n<a>xml/xml_utils_prujohn.XmlCollection.removeAll.elements</a>, but may be faster for some collections.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"elements":{"name":"elements","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeAt":{"name":"removeAt","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeAt","comment":"<p>Removes the element at position<a>xml/xml_utils_prujohn.XmlCollection.removeAt.index</a> from the list.</p>\n<p>This reduces the length of the list by one and moves all later elements\ndown by one position.\nReturns the removed element.\nThrows an <a>dart-core.ArgumentError</a> if <a>xml/xml_utils_prujohn.XmlCollection.removeAt.index</a> is not an <a>dart-core.int</a>.\nThrows an <a>dart-core.RangeError</a> if the <a>xml/xml_utils_prujohn.XmlCollection.removeAt.index</a> does not point inside\nthe list.\nThrows an <a>dart-core.UnsupportedError</a>, and doesn't remove the element,\nif the length of the list cannot be changed.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeLast":{"name":"removeLast","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeLast","comment":"<p>Pops and returns the last element of the list.\nThrows a <a>dart-core.UnsupportedError</a> if the length of the\nlist cannot be changed.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{},"annotations":[]},"removeRange":{"name":"removeRange","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeRange","comment":"<p>Removes <a>xml/xml_utils_prujohn.XmlCollection.removeRange.length</a> elements from the list, beginning at <a>xml/xml_utils_prujohn.XmlCollection.removeRange.start</a>.\nThrows an <a>dart-core.UnsupportedError</a> if the list is\nnot extendable.\nIf <a>xml/xml_utils_prujohn.XmlCollection.removeRange.length</a> is 0, this method does not do anything.\nThrows an <a>dart-core.ArgumentError</a> if <a>xml/xml_utils_prujohn.XmlCollection.removeRange.length</a> is negative.\nThrows an <a>dart-core.RangeError</a> if <a>xml/xml_utils_prujohn.XmlCollection.removeRange.start</a> or\n:start + length: - 1 are out of range.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"length":{"name":"length","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeWhere":{"name":"removeWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeWhere","comment":"<p>Removes all elements of this collection that satisfy <a>xml/xml_utils_prujohn.XmlCollection.removeWhere.test</a>.</p>\n<p>An elements <code>e</code> satisfies <a>xml/xml_utils_prujohn.XmlCollection.removeWhere.test</a> if <code>test(e)</code> is true.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"retainAll":{"name":"retainAll","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.retainAll","comment":"<p>Removes all elements of this collection that are not\nin <a>xml/xml_utils_prujohn.XmlCollection.retainAll.elements</a>.</p>\n<p>For <a>dart-core.Set</a>s, this is the intersection of the two original sets.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"elements":{"name":"elements","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"retainWhere":{"name":"retainWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.retainWhere","comment":"<p>Removes all elements of this collection that fail to satisfy <a>xml/xml_utils_prujohn.XmlCollection.retainWhere.test</a>.</p>\n<p>An elements <code>e</code> satisfies <a>xml/xml_utils_prujohn.XmlCollection.retainWhere.test</a> if <code>test(e)</code> is true.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"setRange":{"name":"setRange","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.setRange","comment":"<p>Copies <a>xml/xml_utils_prujohn.XmlCollection.setRange.length</a> elements of <a>xml/xml_utils_prujohn.XmlCollection.setRange.from</a>, starting\nat <a>xml/xml_utils_prujohn.XmlCollection.setRange.startFrom</a>, into the list, starting at <a>xml/xml_utils_prujohn.XmlCollection.setRange.start</a>.\nIf <a>xml/xml_utils_prujohn.XmlCollection.setRange.length</a> is 0, this method does not do anything.\nThrows an <a>dart-core.ArgumentError</a> if <a>xml/xml_utils_prujohn.XmlCollection.setRange.length</a> is negative.\nThrows an <a>dart-core.RangeError</a> if <a>xml/xml_utils_prujohn.XmlCollection.setRange.start</a> or\n<code>start + length - 1</code> are out of range for <code>this</code>, or if\n<a>xml/xml_utils_prujohn.XmlCollection.setRange.startFrom</a> or <code>startFrom + length - 1</code> are out of range for <a>xml/xml_utils_prujohn.XmlCollection.setRange.from</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"length":{"name":"length","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"from":{"name":"from","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"value":null,"annotations":[]},"startFrom":{"name":"startFrom","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"singleWhere":{"name":"singleWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.singleWhere","comment":"<p>Returns the single element that satisfies f. If no or more than one\nelement match then a <a>dart-core.StateError</a> is thrown.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"skip":{"name":"skip","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.skip","comment":"<p>Returns an <a>dart-core.Iterable</a> that skips the first <a>xml/xml_utils_prujohn.XmlCollection.skip.n</a> elements.</p>\n<p>If this has fewer than <a>xml/xml_utils_prujohn.XmlCollection.skip.n</a> elements, then the resulting <a>dart-core.Iterable</a> will\nbe empty.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"skipWhile":{"name":"skipWhile","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.skipWhile","comment":"<p>Returns an <a>dart-core.Iterable</a> that skips elements while <a>xml/xml_utils_prujohn.XmlCollection.skipWhile.test</a> is satisfied.</p>\n<p>The filtering happens lazily. Every new <a>dart-core.Iterator</a> of the returned\n<a>dart-core.Iterable</a> will iterate over all elements of this.\nAs long as the iterator's elements do not satisfy <a>xml/xml_utils_prujohn.XmlCollection.skipWhile.test</a> they are\ndiscarded. Once an element satisfies the <a>xml/xml_utils_prujohn.XmlCollection.skipWhile.test</a> the iterator stops testing\nand uses every element unconditionally.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"sort":{"name":"sort","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.sort","comment":"<p>Sorts the list according to the order specified by the <a>xml/xml_utils_prujohn.XmlCollection.sort.compare</a> function.</p>\n<p>The <a>xml/xml_utils_prujohn.XmlCollection.sort.compare</a> function must act as a <a>dart-core.Comparator</a>.\nThe default <a>dart-core.List</a> implementations use <a>xml/dart-core.Comparable.compare</a> if\n<a>xml/xml_utils_prujohn.XmlCollection.sort.compare</a> is omitted.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"compare":{"name":"compare","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]},"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"sublist":{"name":"sublist","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.sublist","comment":"<p>Returns a new list containing the elemenst from <a>xml/xml_utils_prujohn.XmlCollection.sublist.start</a> to <a>xml/xml_utils_prujohn.XmlCollection.sublist.end</a>.</p>\n<p>If <a>xml/xml_utils_prujohn.XmlCollection.sublist.end</a> is omitted, the <a>xml/xml_utils_prujohn.XmlCollection.length</a> of the list is used.</p>\n<p>It is an error if <a>xml/xml_utils_prujohn.XmlCollection.sublist.start</a> or <a>xml/xml_utils_prujohn.XmlCollection.sublist.end</a> are not list indices for this list,\nor if <a>xml/xml_utils_prujohn.XmlCollection.sublist.end</a> is before <a>xml/xml_utils_prujohn.XmlCollection.sublist.start</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"take":{"name":"take","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.take","comment":"<p>Returns an <a>dart-core.Iterable</a> with at most <a>xml/xml_utils_prujohn.XmlCollection.take.n</a> elements.</p>\n<p>The returned <a>dart-core.Iterable</a> may contain fewer than <a>xml/xml_utils_prujohn.XmlCollection.take.n</a> elements, if this\ncontains fewer than <a>xml/xml_utils_prujohn.XmlCollection.take.n</a> elements.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"takeWhile":{"name":"takeWhile","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.takeWhile","comment":"<p>Returns an <a>dart-core.Iterable</a> that stops once <a>xml/xml_utils_prujohn.XmlCollection.takeWhile.test</a> is not satisfied anymore.</p>\n<p>The filtering happens lazily. Every new <a>dart-core.Iterator</a> of the returned\n<a>dart-core.Iterable</a> will start iterating over the elements of this.\nWhen the iterator encounters an element <code>e</code> that does not satisfy <a>xml/xml_utils_prujohn.XmlCollection.takeWhile.test</a>,\nit discards <code>e</code> and moves into the finished state. That is, it will not\nask or provide any more elements.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"toList":{"name":"toList","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.toList","comment":"","commentFrom":"dart-collection.ListBase.toList","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"growable":{"name":"growable","optional":true,"named":true,"default":true,"type":[{"outer":"dynamic","inner":[]}],"value":"true","annotations":[]}},"annotations":[]},"toSet":{"name":"toSet","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.toSet","comment":"","commentFrom":"dart-collection.ListBase.toSet","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Set","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{},"annotations":[]},"where":{"name":"where","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.where","comment":"<p>Returns a lazy <a>dart-core.Iterable</a> with all elements that satisfy the\npredicate <a>xml/xml_utils_prujohn.XmlCollection.where.f</a>.</p>\n<p>This method returns a view of the mapped elements. As long as the\nreturned <a>dart-core.Iterable</a> is not iterated over, the supplied function <a>xml/xml_utils_prujohn.XmlCollection.where.f</a> will\nnot be invoked. Iterating will not cache results, and thus iterating\nmultiple times over the the returned <a>dart-core.Iterable</a> will invoke the supplied\nfunction <a>xml/xml_utils_prujohn.XmlCollection.where.f</a> multiple times on the same element.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlCollection.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]}}},"inheritedMethods":{"setters":{"length=":{"name":"length=","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.length=","comment":"<p>Changes the length of this list.</p>\n<p>If <a>xml/xml_utils_prujohn.XmlCollection.length=.newLength</a> is greater than\nthe current length, entries are initialized to <code>null</code>.</p>\n<p>Throws an <a>dart-core.UnsupportedError</a> if the list is fixed-length.</p>","commentFrom":"","inheritedFrom":"dart-core.List.length=","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"newLength":{"name":"newLength","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"getters":{"first":{"name":"first","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.first","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.first","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>xml/xml_utils_prujohn.XmlCollection.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"isEmpty":{"name":"isEmpty","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.isEmpty","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.isEmpty","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"isNotEmpty":{"name":"isNotEmpty","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.isNotEmpty","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.isNotEmpty","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"iterator":{"name":"iterator","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.iterator","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.iterator","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterator","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{},"annotations":[]},"last":{"name":"last","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.last","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.last","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.length","comment":"<p>Returns the number of objects in this list.</p>\n<p>The valid indices for a list are <code>0</code> through <code>length - 1</code>.</p>","commentFrom":"","inheritedFrom":"dart-core.List.length","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"reversed":{"name":"reversed","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.reversed","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.reversed","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"single":{"name":"single","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.single","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.single","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>xml/xml_utils_prujohn.XmlCollection.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>xml/xml_utils_prujohn.XmlCollection.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"[]":{"name":"[]","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.[]","comment":"<p>Returns the object at the given <a>xml/xml_utils_prujohn.XmlCollection.[].index</a> in the list\nor throws a <a>dart-core.RangeError</a> if <a>xml/xml_utils_prujohn.XmlCollection.[].index</a> is out of bounds.</p>","commentFrom":"","inheritedFrom":"dart-core.List.[]","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.List.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"[]=":{"name":"[]=","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.[]=","comment":"<p>Sets the value at the given <a>xml/xml_utils_prujohn.XmlCollection.[]=.index</a> in the list to <a>xml/xml_utils_prujohn.XmlCollection.[]=.value</a>\nor throws a <a>dart-core.RangeError</a> if <a>xml/xml_utils_prujohn.XmlCollection.[]=.index</a> is out of bounds.</p>","commentFrom":"","inheritedFrom":"dart-core.List.[]=","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"add":{"name":"add","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.add","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.add","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.addAll","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.addAll","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"any":{"name":"any","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.any","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.any","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"asMap":{"name":"asMap","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.asMap","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.asMap","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.int","inner":[]},{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{},"annotations":[]},"clear":{"name":"clear","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.clear","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.clear","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"contains":{"name":"contains","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.contains","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.contains","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"elementAt":{"name":"elementAt","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.elementAt","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.elementAt","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"every":{"name":"every","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.every","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.every","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"expand":{"name":"expand","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.expand","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.expand","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"fillRange":{"name":"fillRange","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.fillRange","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.fillRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"fill":{"name":"fill","optional":true,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"firstWhere":{"name":"firstWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.firstWhere","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.firstWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}},"orElse":{"name":"orElse","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.Object","inner":[]}],"parameters":{}}}},"annotations":[]},"fold":{"name":"fold","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.fold","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.fold","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"initialValue":{"name":"initialValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"combine":{"name":"combine","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{"previousValue":{"name":"previousValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"forEach":{"name":"forEach","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.forEach","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.forEach","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"action":{"name":"action","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"void","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"getRange":{"name":"getRange","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.getRange","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.getRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"indexOf":{"name":"indexOf","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.indexOf","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.indexOf","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]},"startIndex":{"name":"startIndex","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[]},"insert":{"name":"insert","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.insert","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.insert","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"insertAll":{"name":"insertAll","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.insertAll","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.insertAll","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"join":{"name":"join","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.join","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.join","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"separator":{"name":"separator","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.String","inner":[]}],"value":"\"\"","annotations":[]}},"annotations":[]},"lastIndexOf":{"name":"lastIndexOf","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.lastIndexOf","comment":"<p>Returns the last index in the list a of the given <a>xml/xml_utils_prujohn.XmlCollection.lastIndexOf.element</a>, starting\nthe search at index <a>xml/xml_utils_prujohn.XmlCollection.lastIndexOf.startIndex</a> to 0.\nReturns -1 if <a>xml/xml_utils_prujohn.XmlCollection.lastIndexOf.element</a> is not found.</p>","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.lastIndexOf","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]},"startIndex":{"name":"startIndex","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lastWhere":{"name":"lastWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.lastWhere","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.lastWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}},"orElse":{"name":"orElse","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.Object","inner":[]}],"parameters":{}}}},"annotations":[]},"map":{"name":"map","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.map","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.map","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.noSuchMethod","comment":"<p><a>xml/xml_utils_prujohn.XmlCollection.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>xml/xml_utils_prujohn.XmlCollection.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>xml/xml_utils_prujohn.XmlCollection.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>xml/xml_utils_prujohn.XmlCollection.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"reduce":{"name":"reduce","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.reduce","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.reduce","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{"combine":{"name":"combine","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{"previousValue":{"name":"previousValue","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]},"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"remove":{"name":"remove","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.remove","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.remove","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeAt":{"name":"removeAt","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeAt","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.removeAt","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeLast":{"name":"removeLast","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeLast","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.removeLast","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{},"annotations":[]},"removeRange":{"name":"removeRange","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeRange","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.removeRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeWhere":{"name":"removeWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.removeWhere","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.removeWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"replaceRange":{"name":"replaceRange","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.replaceRange","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.replaceRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"newContents":{"name":"newContents","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"retainWhere":{"name":"retainWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.retainWhere","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.retainWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"setAll":{"name":"setAll","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.setAll","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.setAll","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"index":{"name":"index","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"setRange":{"name":"setRange","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.setRange","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.setRange","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"iterable":{"name":"iterable","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"value":null,"annotations":[]},"skipCount":{"name":"skipCount","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[]},"shuffle":{"name":"shuffle","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.shuffle","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.shuffle","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"random":{"name":"random","optional":true,"named":false,"default":false,"type":[{"outer":"dart-math.Random","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"singleWhere":{"name":"singleWhere","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.singleWhere","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.singleWhere","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"skip":{"name":"skip","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.skip","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.skip","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{"count":{"name":"count","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"skipWhile":{"name":"skipWhile","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.skipWhile","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.skipWhile","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"sort":{"name":"sort","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.sort","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.sort","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"compare":{"name":"compare","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]},"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"sublist":{"name":"sublist","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.sublist","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.sublist","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"take":{"name":"take","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.take","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.take","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{"count":{"name":"count","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"takeWhile":{"name":"takeWhile","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.takeWhile","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.takeWhile","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]},"toList":{"name":"toList","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.toList","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.toList","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{"growable":{"name":"growable","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"true","annotations":[]}},"annotations":[]},"toSet":{"name":"toSet","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.toSet","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.toSet","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Set","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{},"annotations":[]},"toString":{"name":"toString","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.toString","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"where":{"name":"where","qualifiedName":"xml/xml_utils_prujohn.XmlCollection.where","comment":"","commentFrom":"","inheritedFrom":"xml_utils_prujohn.ListBase.where","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}]}],"parameters":{"test":{"name":"test","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"xml_utils_prujohn.ListMixin.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]}}},"annotations":[],"generics":{"E":{"name":"E","type":"xml_utils_prujohn.XmlNode"}}}