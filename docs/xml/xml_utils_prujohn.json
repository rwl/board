{"name":"xml_utils_prujohn","qualifiedName":"xml/xml_utils_prujohn","comment":"","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"XML","qualifiedName":"xml/xml_utils_prujohn.XML","preview":"<p>Utility class to work with XML data.</p>"},{"name":"XmlAttribute","qualifiedName":"xml/xml_utils_prujohn.XmlAttribute","preview":"<p>Represents an attribute component of an XML element.</p>"},{"name":"XmlCDATA","qualifiedName":"xml/xml_utils_prujohn.XmlCDATA","preview":"<p>Represents a CDATA node of an XML tree.</p>"},{"name":"XmlCollection","qualifiedName":"xml/xml_utils_prujohn.XmlCollection","preview":"<p>Represents a queryable collection of <a>xml/xml_utils_prujohn.XmlNode</a> elements.</p>"},{"name":"XmlElement","qualifiedName":"xml/xml_utils_prujohn.XmlElement","preview":"<p>Represents an element node of XML.</p>"},{"name":"XmlNamespace","qualifiedName":"xml/xml_utils_prujohn.XmlNamespace","preview":"<p>Represents an namespace declaration of an XML element.</p>"},{"name":"XmlNode","qualifiedName":"xml/xml_utils_prujohn.XmlNode","preview":"<p>Represents a base class for XML nodes.  This node is essentially\nread-only.  Use <a>xml/xml_utils_prujohn.XmlElement</a> for manipulating attributes\nand heirarchies.</p>"},{"name":"XmlNodeType","qualifiedName":"xml/xml_utils_prujohn.XmlNodeType","preview":"<p>Enumerates <a>xml/xml_utils_prujohn.XmlNode</a> types.</p>"},{"name":"XmlParser","qualifiedName":"xml/xml_utils_prujohn.XmlParser","preview":"<p><i>Comment preview not available</i></p>"},{"name":"XmlProcessingInstruction","qualifiedName":"xml/xml_utils_prujohn.XmlProcessingInstruction","preview":"<p>Represents and XML Processing Instruction (PI) node.</p>"},{"name":"XmlText","qualifiedName":"xml/xml_utils_prujohn.XmlText","preview":"<p>Represents a text node component of XML.</p>"},{"name":"XmlToken","qualifiedName":"xml/xml_utils_prujohn.XmlToken"},{"name":"XmlTokenizer","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer","preview":"<p>Returns tokenized parts of Xml document.</p>"}],"typedef":{},"error":[{"name":"XmlException","qualifiedName":"xml/xml_utils_prujohn.XmlException"}]},"packageName":"xml","packageIntro":"<h2>Dart Xml</h2>\n<p>Dart Xml is a lightweight library for parsing and emitting xml.</p>\n<h2>What \"Lightweight\" Means</h2>\n<p>Many programmatic scenarios concerning XML deal with serialization and\ndeserialization of data, usually for transmission between services).\nThe querying of said data in object form is also important.  Typically\nthese data are XML fragments and not fully formed XML documents.  Even so,\nthe library is able to deal with fully formed XML documents.</p>\n<p>Dart Developers who require more robust XML handling are encouraged to fork the\nproject and expand as needed.  Pull requests will certainly be welcomed.</p>\n<h2>Getting Started</h2>\n<p>See the \"getting_started.md\" file in the <strong>doc/</strong> directory of the project.</p>\n<h3>Parsing</h3>\n<pre><code>// Returns a strongly-typed XmlNode tree\nXmlElement myXmlTree = XML.parse(myXmlString);\n</code></pre>\n<h3>Serialization</h3>\n<pre><code>// Returns a stringified xml document from a given XmlNode tree\nString myXmlString = XML.stringify(myXmlNode);\n\n// or...\nString myXmlString = myXmlNode.toString();\n</code></pre>\n<h2>Supports</h2><ul><li>Standard well-formed XML</li><li>Comment nodes</li><li>CDATA nodes</li><li>Text nodes</li><li>Namespace declarations and usage</li><li>Processing Instruction (PI) nodes</li><li>\n<p>Querying of XML nodes by tagName, attribute(s), or XmlNodeType (combinators\nsoon hopefully)</p></li><li>Top-Level Declarations</li></ul>\n<h2>Limitations</h2><ul><li>Doesn't enforce DTD</li><li>Doesn't enforce any local schema declarations</li></ul>\n<h2>License</h2>\n<p>Apache 2.0</p>"}