{"name":"XmlTokenizer","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer","comment":"<p>Returns tokenized parts of Xml document.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"B":{"name":"B","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.B","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"CARRIAGE_RETURN":{"name":"CARRIAGE_RETURN","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.CARRIAGE_RETURN","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"COLON":{"name":"COLON","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.COLON","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"DASH":{"name":"DASH","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.DASH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"EQ":{"name":"EQ","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.EQ","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"ERR_UNEXPECTED_END":{"name":"ERR_UNEXPECTED_END","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.ERR_UNEXPECTED_END","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"GT":{"name":"GT","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.GT","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"LT":{"name":"LT","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.LT","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"NEW_LINE":{"name":"NEW_LINE","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.NEW_LINE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"Q":{"name":"Q","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.Q","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"QUOTE":{"name":"QUOTE","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.QUOTE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"RBRACK":{"name":"RBRACK","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.RBRACK","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"SLASH":{"name":"SLASH","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.SLASH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"SPACE":{"name":"SPACE","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.SPACE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"SQUOTE":{"name":"SQUOTE","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.SQUOTE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"TAB":{"name":"TAB","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.TAB","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"lastTokenIndex":{"name":"lastTokenIndex","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.lastTokenIndex","comment":"","commentFrom":"xml_utils_prujohn.XmlTokenizer.lastTokenIndex","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.XmlTokenizer-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"_xml":{"name":"_xml","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"indexOfToken":{"name":"indexOfToken","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.indexOfToken","comment":"<p>Returns -1 if the token is not found, otherwise returns the index of\nthe first instance of the token in the token sequence.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"token":{"name":"token","optional":false,"named":false,"default":false,"type":[{"outer":"xml/xml_utils_prujohn.XmlToken","inner":[]}],"value":null,"annotations":[]},"start":{"name":"start","optional":true,"named":true,"default":true,"type":[{"outer":"dynamic","inner":[]}],"value":"0","annotations":[]}},"annotations":[]},"isReserved":{"name":"isReserved","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.isReserved","comment":"<p>Returns true if the charCode is one of the special reserved\ncharCodes</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"c":{"name":"c","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"isWhitespace":{"name":"isWhitespace","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.isWhitespace","comment":"<p>Returns true if the charCode is considered to be whitespace.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"c":{"name":"c","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lookAheadMatch":{"name":"lookAheadMatch","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.lookAheadMatch","comment":"<p>Performs a non-destructive look-ahead in the token list and tries to match\nthe given <a>xml/xml_utils_prujohn.XmlTokenizer.lookAheadMatch.sequence</a> of tokens.</p>\n<p>Search will continue until the end of the token list, or until optional\n<a>xml/xml_utils_prujohn.XmlTokenizer.lookAheadMatch.until</a> sequence of tokens is found.</p>\n<p>Search begins at <a>xml/xml_utils_prujohn.XmlTokenizer.lookAheadMatch.index</a> = 0 unless otherwise specified.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"sequence":{"name":"sequence","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"xml/xml_utils_prujohn.XmlToken","inner":[]}]}],"value":null,"annotations":[]},"until":{"name":"until","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.List","inner":[{"outer":"xml/xml_utils_prujohn.XmlToken","inner":[]}]}],"value":"null","annotations":[]},"index":{"name":"index","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[]},"next":{"name":"next","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.next","comment":"<p>Returns the next token, or null if no tokens are available.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"xml/xml_utils_prujohn.XmlToken","inner":[]}],"parameters":{},"annotations":[]},"toString":{"name":"toString","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>xml/xml_utils_prujohn.XmlTokenizer.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>xml/xml_utils_prujohn.XmlTokenizer.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>xml/xml_utils_prujohn.XmlTokenizer.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.noSuchMethod","comment":"<p><a>xml/xml_utils_prujohn.XmlTokenizer.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>xml/xml_utils_prujohn.XmlTokenizer.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>xml/xml_utils_prujohn.XmlTokenizer.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>xml/xml_utils_prujohn.XmlTokenizer.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"xml/xml_utils_prujohn.XmlTokenizer.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}