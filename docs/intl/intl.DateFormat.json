{"name":"DateFormat","qualifiedName":"intl/intl.DateFormat","comment":"<p>DateFormat is for formatting and parsing dates in a locale-sensitive\nmanner.\nIt allows the user to choose from a set of standard date time formats as well\nas specify a customized pattern under certain locales. Date elements that\nvary across locales include month name, week name, field order, etc.\nWe also allow the user to use any customized pattern to parse or format\ndate-time strings under certain locales. Date elements that vary across\nlocales include month name, weekname, field, order, etc.</p>\n<p>Formatting dates in the default \"en_US\" format does not require any\ninitialization. e.g.</p>\n<pre><code>  print(new DateFormat.yMMMd().format(new Date.now()));\n</code></pre>\n<p>But for other locales, the formatting data for the locale must be\nobtained. This can currently be done\nin one of three ways, determined by which library you import. In all cases,\nthe \"initializeDateFormatting\" method must be called and will return a future\nthat is complete once the locale data is available. The result of the future\nisn't important, but the data for that locale is available to the date\nformatting and parsing once it completes.</p>\n<p>The easiest option is that the data may be available locally, imported in a\nlibrary that contains data for all the locales.</p>\n<pre><code>  import 'package:intl/date_symbol_data_local.dart';\n  initializeDateFormatting(\"fr_FR\", null).then((_) =&gt; runMyCode());\n</code></pre>\n<p>If we are running outside of a browser, we may want to read the data\nfrom files in the file system.</p>\n<pre><code>  import 'package:intl/date_symbol_data_file.dart';\n  initializeDateFormatting(\"de_DE\", null).then((_) =&gt; runMyCode());\n</code></pre>\n<p>If we are running in a browser, we may want to read the data from the\nserver using the XmlHttpRequest mechanism.</p>\n<pre><code>  import 'package:intl/date_symbol_data_http_request.dart';\n  initializeDateFormatting(\"pt_BR\", null).then((_) =&gt; runMyCode());\n</code></pre>\n<p>The code in example/basic/basic_example.dart shows a full example of\nusing this mechanism.</p>\n<p>Once we have the locale data, we need to specify the particular format.\nThis library uses the ICU/JDK date/time pattern specification both for\ncomplete format specifications and also the abbreviated \"skeleton\" form\nwhich can also adapt to different locales and is preferred where available.</p>\n<p>Skeletons: These can be specified either as the ICU constant name or as the\nskeleton to which it resolves. The supported set of skeletons is as follows</p>\n<pre><code> ICU Name                   Skeleton\n --------                   --------\n DAY                          d\n ABBR_WEEKDAY                 E\n WEEKDAY                      EEEE\n ABBR_STANDALONE_MONTH        LLL\n STANDALONE_MONTH             LLLL\n NUM_MONTH                    M\n NUM_MONTH_DAY                Md\n NUM_MONTH_WEEKDAY_DAY        MEd\n ABBR_MONTH                   MMM\n ABBR_MONTH_DAY               MMMd\n ABBR_MONTH_WEEKDAY_DAY       MMMEd\n MONTH                        MMMM\n MONTH_DAY                    MMMMd\n MONTH_WEEKDAY_DAY            MMMMEEEEd\n ABBR_QUARTER                 QQQ\n QUARTER                      QQQQ\n YEAR                         y\n YEAR_NUM_MONTH               yM\n YEAR_NUM_MONTH_DAY           yMd\n YEAR_NUM_MONTH_WEEKDAY_DAY   yMEd\n YEAR_ABBR_MONTH              yMMM\n YEAR_ABBR_MONTH_DAY          yMMMd\n YEAR_ABBR_MONTH_WEEKDAY_DAY  yMMMEd\n YEAR_MONTH                   yMMMM\n YEAR_MONTH_DAY               yMMMMd\n YEAR_MONTH_WEEKDAY_DAY       yMMMMEEEEd\n YEAR_ABBR_QUARTER            yQQQ\n YEAR_QUARTER                 yQQQQ\n HOUR24                       H\n HOUR24_MINUTE                Hm\n HOUR24_MINUTE_SECOND         Hms\n HOUR                         j\n HOUR_MINUTE                  jm\n HOUR_MINUTE_SECOND           jms\n HOUR_MINUTE_GENERIC_TZ       jmv\n HOUR_MINUTE_TZ               jmz\n HOUR_GENERIC_TZ              jv\n HOUR_TZ                      jz\n MINUTE                       m\n MINUTE_SECOND                ms\n SECOND                       s\n</code></pre>\n<p>Examples Using the US Locale:</p>\n<pre><code> Pattern                           Result\n ----------------                  -------\n new DateFormat.yMd()             -&gt; 7/10/1996\n new DateFormat(\"yMd\")            -&gt; 7/10/1996\n new DateFormat.yMMMMd(\"en_US\")   -&gt; July 10, 1996\n new DateFormat(\"Hm\", \"en_US\")    -&gt; 12:08 PM\n new DateFormat.yMd().add_Hm()    -&gt; 7/10/1996 12:08 PM\n</code></pre>\n<p>Explicit Pattern Syntax: Formats can also be specified with a pattern string.\nThe skeleton forms will resolve to explicit patterns of this form, but will\nalso adapt to different patterns in different locales.\nThe following characters are reserved:</p>\n<pre><code>Symbol   Meaning                Presentation        Example\n------   -------                ------------        -------\nG        era designator         (Text)              AD\ny        year                   (Number)            1996\nM        month in year          (Text &amp; Number)     July &amp; 07\nL        standalone month       (Text &amp; Number)     July &amp; 07\nd        day in month           (Number)            10\nc        standalone day         (Number)            10\nh        hour in am/pm (1~12)   (Number)            12\nH        hour in day (0~23)     (Number)            0\nm        minute in hour         (Number)            30\ns        second in minute       (Number)            55\nS        fractional second      (Number)            978\nE        day of week            (Text)              Tuesday\nD        day in year            (Number)            189\na        am/pm marker           (Text)              PM\nk        hour in day (1~24)     (Number)            24\nK        hour in am/pm (0~11)   (Number)            0\nz        time zone              (Text)              Pacific Standard Time\nZ        time zone (RFC 822)    (Number)            -0800\nv        time zone (generic)    (Text)              Pacific Time\nQ        quarter                (Text)              Q3\n'        escape for text        (Delimiter)         'Date='\n''       single quote           (Literal)           'o''clock'\n</code></pre>\n<p>The count of pattern letters determine the format.</p>\n<p><strong>Text</strong>:\n<em> 5 pattern letters--use narrow form for standalone. Otherwise does not apply\n</em> 4 or more pattern letters--use full form,\n<em> 3 pattern letters--use short or abbreviated form if one exists\n</em> less than 3--use numeric form if one exists</p>\n<p><strong>Number</strong>: the minimum number of digits. Shorter numbers are zero-padded to\nthis amount (e.g. if \"m\" produces \"6\", \"mm\" produces \"06\"). Year is handled\nspecially; that is, if the count of 'y' is 2, the Year will be truncated to\n2 digits. (e.g., if \"yyyy\" produces \"1997\", \"yy\" produces \"97\".) Unlike other\nfields, fractional seconds are padded on the right with zero.</p>\n<p><strong>(Text &amp; Number)</strong>: 3 or over, use text, otherwise use number.</p>\n<p>Any characters not in the pattern will be treated as quoted text. For\ninstance, characters like ':', '.', ' ', '#' and '@' will appear in the\nresulting text even though they are not enclosed in single quotes. In our\ncurrent pattern usage, not all letters have meanings. But those unused\nletters are strongly discouraged to be used as quoted text without quotes,\nbecause we may use other letters as pattern characters in the future.</p>\n<p>Examples Using the US Locale:</p>\n<pre><code>Format Pattern                     Result\n--------------                     -------\n\"yyyy.MM.dd G 'at' HH:mm:ss vvvv\"  1996.07.10 AD at 15:08:56 Pacific Time\n\"EEE, MMM d, ''yy\"                 Wed, July 10, '96\n\"h:mm a\"                           12:08 PM\n\"hh 'o''clock' a, zzzz\"            12 o'clock PM, Pacific Daylight Time\n\"K:mm a, vvv\"                      0:00 PM, PT\n\"yyyyy.MMMMM.dd GGG hh:mm aaa\"     01996.July.10 AD 12:08 PM\n</code></pre>\n<p>When parsing a date string using the abbreviated year pattern (\"yy\"),\nDateFormat must interpret the abbreviated year relative to some\ncentury. It does this by adjusting dates to be within 80 years before and 20\nyears after the time the parse function is called. For example, using a\npattern of \"MM/dd/yy\" and a DateParse instance created on Jan 1, 1997,\nthe string \"01/11/12\" would be interpreted as Jan 11, 2012 while the string\n\"05/04/64\" would be interpreted as May 4, 1964. During parsing, only\nstrings consisting of exactly two digits, as defined by {@link\njava.lang.Character#isDigit(char)}, will be parsed into the default\ncentury. Any other numeric string, such as a one digit string, a three or\nmore digit string will be interpreted as its face value.</p>\n<p>If the year pattern does not have exactly two 'y' characters, the year is\ninterpreted literally, regardless of the number of digits. So using the\npattern \"MM/dd/yyyy\", \"01/11/12\" parses to Jan 11, 12 A.D.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"ABBR_MONTH":{"name":"ABBR_MONTH","qualifiedName":"intl/intl.DateFormat.ABBR_MONTH","comment":"<p>For each of the skeleton formats we also allow the use of the corresponding\nICU constant names.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ABBR_MONTH_DAY":{"name":"ABBR_MONTH_DAY","qualifiedName":"intl/intl.DateFormat.ABBR_MONTH_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ABBR_MONTH_WEEKDAY_DAY":{"name":"ABBR_MONTH_WEEKDAY_DAY","qualifiedName":"intl/intl.DateFormat.ABBR_MONTH_WEEKDAY_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ABBR_QUARTER":{"name":"ABBR_QUARTER","qualifiedName":"intl/intl.DateFormat.ABBR_QUARTER","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ABBR_STANDALONE_MONTH":{"name":"ABBR_STANDALONE_MONTH","qualifiedName":"intl/intl.DateFormat.ABBR_STANDALONE_MONTH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ABBR_WEEKDAY":{"name":"ABBR_WEEKDAY","qualifiedName":"intl/intl.DateFormat.ABBR_WEEKDAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"DAY":{"name":"DAY","qualifiedName":"intl/intl.DateFormat.DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR":{"name":"HOUR","qualifiedName":"intl/intl.DateFormat.HOUR","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR24":{"name":"HOUR24","qualifiedName":"intl/intl.DateFormat.HOUR24","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR24_MINUTE":{"name":"HOUR24_MINUTE","qualifiedName":"intl/intl.DateFormat.HOUR24_MINUTE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR24_MINUTE_SECOND":{"name":"HOUR24_MINUTE_SECOND","qualifiedName":"intl/intl.DateFormat.HOUR24_MINUTE_SECOND","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR_GENERIC_TZ":{"name":"HOUR_GENERIC_TZ","qualifiedName":"intl/intl.DateFormat.HOUR_GENERIC_TZ","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR_MINUTE":{"name":"HOUR_MINUTE","qualifiedName":"intl/intl.DateFormat.HOUR_MINUTE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR_MINUTE_GENERIC_TZ":{"name":"HOUR_MINUTE_GENERIC_TZ","qualifiedName":"intl/intl.DateFormat.HOUR_MINUTE_GENERIC_TZ","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR_MINUTE_SECOND":{"name":"HOUR_MINUTE_SECOND","qualifiedName":"intl/intl.DateFormat.HOUR_MINUTE_SECOND","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR_MINUTE_TZ":{"name":"HOUR_MINUTE_TZ","qualifiedName":"intl/intl.DateFormat.HOUR_MINUTE_TZ","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"HOUR_TZ":{"name":"HOUR_TZ","qualifiedName":"intl/intl.DateFormat.HOUR_TZ","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"MINUTE":{"name":"MINUTE","qualifiedName":"intl/intl.DateFormat.MINUTE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"MINUTE_SECOND":{"name":"MINUTE_SECOND","qualifiedName":"intl/intl.DateFormat.MINUTE_SECOND","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"MONTH":{"name":"MONTH","qualifiedName":"intl/intl.DateFormat.MONTH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"MONTH_DAY":{"name":"MONTH_DAY","qualifiedName":"intl/intl.DateFormat.MONTH_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"MONTH_WEEKDAY_DAY":{"name":"MONTH_WEEKDAY_DAY","qualifiedName":"intl/intl.DateFormat.MONTH_WEEKDAY_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"NUM_MONTH":{"name":"NUM_MONTH","qualifiedName":"intl/intl.DateFormat.NUM_MONTH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"NUM_MONTH_DAY":{"name":"NUM_MONTH_DAY","qualifiedName":"intl/intl.DateFormat.NUM_MONTH_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"NUM_MONTH_WEEKDAY_DAY":{"name":"NUM_MONTH_WEEKDAY_DAY","qualifiedName":"intl/intl.DateFormat.NUM_MONTH_WEEKDAY_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"QUARTER":{"name":"QUARTER","qualifiedName":"intl/intl.DateFormat.QUARTER","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"SECOND":{"name":"SECOND","qualifiedName":"intl/intl.DateFormat.SECOND","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"STANDALONE_MONTH":{"name":"STANDALONE_MONTH","qualifiedName":"intl/intl.DateFormat.STANDALONE_MONTH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"WEEKDAY":{"name":"WEEKDAY","qualifiedName":"intl/intl.DateFormat.WEEKDAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR":{"name":"YEAR","qualifiedName":"intl/intl.DateFormat.YEAR","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_ABBR_MONTH":{"name":"YEAR_ABBR_MONTH","qualifiedName":"intl/intl.DateFormat.YEAR_ABBR_MONTH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_ABBR_MONTH_DAY":{"name":"YEAR_ABBR_MONTH_DAY","qualifiedName":"intl/intl.DateFormat.YEAR_ABBR_MONTH_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_ABBR_MONTH_WEEKDAY_DAY":{"name":"YEAR_ABBR_MONTH_WEEKDAY_DAY","qualifiedName":"intl/intl.DateFormat.YEAR_ABBR_MONTH_WEEKDAY_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_ABBR_QUARTER":{"name":"YEAR_ABBR_QUARTER","qualifiedName":"intl/intl.DateFormat.YEAR_ABBR_QUARTER","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_MONTH":{"name":"YEAR_MONTH","qualifiedName":"intl/intl.DateFormat.YEAR_MONTH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_MONTH_DAY":{"name":"YEAR_MONTH_DAY","qualifiedName":"intl/intl.DateFormat.YEAR_MONTH_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_MONTH_WEEKDAY_DAY":{"name":"YEAR_MONTH_WEEKDAY_DAY","qualifiedName":"intl/intl.DateFormat.YEAR_MONTH_WEEKDAY_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_NUM_MONTH":{"name":"YEAR_NUM_MONTH","qualifiedName":"intl/intl.DateFormat.YEAR_NUM_MONTH","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_NUM_MONTH_DAY":{"name":"YEAR_NUM_MONTH_DAY","qualifiedName":"intl/intl.DateFormat.YEAR_NUM_MONTH_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_NUM_MONTH_WEEKDAY_DAY":{"name":"YEAR_NUM_MONTH_WEEKDAY_DAY","qualifiedName":"intl/intl.DateFormat.YEAR_NUM_MONTH_WEEKDAY_DAY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YEAR_QUARTER":{"name":"YEAR_QUARTER","qualifiedName":"intl/intl.DateFormat.YEAR_QUARTER","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"dateSymbols":{"name":"dateSymbols","qualifiedName":"intl/intl.DateFormat.dateSymbols","comment":"<p>Return the DateSymbol information for the locale. This can be useful\nto find lists like the names of weekdays or months in a locale, but\nthe structure of this data may change, and it's generally better to go\nthrough the <a>intl/intl.DateFormat.format</a> and <a>intl/intl.DateFormat.parse</a> APIs. If the locale isn't present, or\nis uninitialized, returns null;</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/date_symbols.DateSymbols","inner":[]}],"parameters":{},"annotations":[]},"locale":{"name":"locale","qualifiedName":"intl/intl.DateFormat.locale","comment":"<p>Return the locale code in which we operate, e.g. 'en_US' or 'pt'.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"pattern":{"name":"pattern","qualifiedName":"intl/intl.DateFormat.pattern","comment":"<p>Return the pattern that we use to format dates.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"intl/intl.DateFormat.DateFormat-","comment":"<p>Creates a new DateFormat, using the format specified by <a>intl/intl.DateFormat.DateFormat-.newPattern</a>. For\nforms that match one of our predefined skeletons, we look up the\ncorresponding pattern in <a>intl/intl.DateFormat.DateFormat-.locale</a> (or in the default locale if none is\nspecified) and use the resulting full format string. This is the\npreferred usage, but if <a>intl/intl.DateFormat.DateFormat-.newPattern</a> does not match one of the skeletons,\nthen it is used as a format directly, but will not be adapted to suit\nthe locale.</p>\n<p>For example, in an en_US locale, specifying the skeleton</p>\n<pre><code>new DateFormat('yMEd');\n</code></pre>\n<p>or the explicit</p>\n<pre><code>new DateFormat('EEE, M/d/y');\n</code></pre>\n<p>would produce the same result, a date of the form</p>\n<pre><code>Wed, 6/27/2012\n</code></pre>\n<p>The first version would produce a different format string if used in\nanother locale, but the second format would always be the same.</p>\n<p>If <a>intl/intl.DateFormat.DateFormat-.locale</a> does not exist in our set of supported locales then an\n<a>dart-core.ArgumentError</a> is thrown.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"newPattern":{"name":"newPattern","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"E":{"name":"E","qualifiedName":"intl/intl.DateFormat.DateFormat-E","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"EEEE":{"name":"EEEE","qualifiedName":"intl/intl.DateFormat.DateFormat-EEEE","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"H":{"name":"H","qualifiedName":"intl/intl.DateFormat.DateFormat-H","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"Hm":{"name":"Hm","qualifiedName":"intl/intl.DateFormat.DateFormat-Hm","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"Hms":{"name":"Hms","qualifiedName":"intl/intl.DateFormat.DateFormat-Hms","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"LLL":{"name":"LLL","qualifiedName":"intl/intl.DateFormat.DateFormat-LLL","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"LLLL":{"name":"LLLL","qualifiedName":"intl/intl.DateFormat.DateFormat-LLLL","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"M":{"name":"M","qualifiedName":"intl/intl.DateFormat.DateFormat-M","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"MEd":{"name":"MEd","qualifiedName":"intl/intl.DateFormat.DateFormat-MEd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"MMM":{"name":"MMM","qualifiedName":"intl/intl.DateFormat.DateFormat-MMM","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"MMMEd":{"name":"MMMEd","qualifiedName":"intl/intl.DateFormat.DateFormat-MMMEd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"MMMM":{"name":"MMMM","qualifiedName":"intl/intl.DateFormat.DateFormat-MMMM","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"MMMMEEEEd":{"name":"MMMMEEEEd","qualifiedName":"intl/intl.DateFormat.DateFormat-MMMMEEEEd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"MMMMd":{"name":"MMMMd","qualifiedName":"intl/intl.DateFormat.DateFormat-MMMMd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"MMMd":{"name":"MMMd","qualifiedName":"intl/intl.DateFormat.DateFormat-MMMd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"Md":{"name":"Md","qualifiedName":"intl/intl.DateFormat.DateFormat-Md","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"QQQ":{"name":"QQQ","qualifiedName":"intl/intl.DateFormat.DateFormat-QQQ","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"QQQQ":{"name":"QQQQ","qualifiedName":"intl/intl.DateFormat.DateFormat-QQQQ","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"d":{"name":"d","qualifiedName":"intl/intl.DateFormat.DateFormat-d","comment":"<p>The named constructors for this class are all conveniences for creating\ninstances using one of the known \"skeleton\" formats, and having code\ncompletion support for discovering those formats.\nSo,</p>\n<pre><code>new DateFormat.yMd(\"en_US\")\n</code></pre>\n<p>is equivalent to</p>\n<pre><code>new DateFormat(\"yMd\", \"en_US\")\n</code></pre>\n<p>To create a compound format you can use these constructors in combination\nwith the add_ methods below. e.g.</p>\n<pre><code>new DateFormat.yMd().add_Hms();\n</code></pre>\n<p>If the optional <a>intl/intl.DateFormat.DateFormat-d.locale</a> is omitted, the format will be created using the\ndefault locale in <a>intl/intl.Intl.systemLocale</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"j":{"name":"j","qualifiedName":"intl/intl.DateFormat.DateFormat-j","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"jm":{"name":"jm","qualifiedName":"intl/intl.DateFormat.DateFormat-jm","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"jms":{"name":"jms","qualifiedName":"intl/intl.DateFormat.DateFormat-jms","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"jmv":{"name":"jmv","qualifiedName":"intl/intl.DateFormat.DateFormat-jmv","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"jmz":{"name":"jmz","qualifiedName":"intl/intl.DateFormat.DateFormat-jmz","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"jv":{"name":"jv","qualifiedName":"intl/intl.DateFormat.DateFormat-jv","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"jz":{"name":"jz","qualifiedName":"intl/intl.DateFormat.DateFormat-jz","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"m":{"name":"m","qualifiedName":"intl/intl.DateFormat.DateFormat-m","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"ms":{"name":"ms","qualifiedName":"intl/intl.DateFormat.DateFormat-ms","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"s":{"name":"s","qualifiedName":"intl/intl.DateFormat.DateFormat-s","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"y":{"name":"y","qualifiedName":"intl/intl.DateFormat.DateFormat-y","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yM":{"name":"yM","qualifiedName":"intl/intl.DateFormat.DateFormat-yM","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yMEd":{"name":"yMEd","qualifiedName":"intl/intl.DateFormat.DateFormat-yMEd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yMMM":{"name":"yMMM","qualifiedName":"intl/intl.DateFormat.DateFormat-yMMM","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yMMMEd":{"name":"yMMMEd","qualifiedName":"intl/intl.DateFormat.DateFormat-yMMMEd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yMMMM":{"name":"yMMMM","qualifiedName":"intl/intl.DateFormat.DateFormat-yMMMM","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yMMMMEEEEd":{"name":"yMMMMEEEEd","qualifiedName":"intl/intl.DateFormat.DateFormat-yMMMMEEEEd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yMMMMd":{"name":"yMMMMd","qualifiedName":"intl/intl.DateFormat.DateFormat-yMMMMd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yMMMd":{"name":"yMMMd","qualifiedName":"intl/intl.DateFormat.DateFormat-yMMMd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yMd":{"name":"yMd","qualifiedName":"intl/intl.DateFormat.DateFormat-yMd","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yQQQ":{"name":"yQQQ","qualifiedName":"intl/intl.DateFormat.DateFormat-yQQQ","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"yQQQQ":{"name":"yQQQQ","qualifiedName":"intl/intl.DateFormat.DateFormat-yQQQQ","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"locale":{"name":"locale","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"addPattern":{"name":"addPattern","qualifiedName":"intl/intl.DateFormat.addPattern","comment":"<p>Add <a>intl/intl.DateFormat.addPattern.inputPattern</a> to this instance as a pattern. If there was a previous\npattern, then this appends to it, separating the two by <a>intl/intl.DateFormat.addPattern.separator</a>.\n<a>intl/intl.DateFormat.addPattern.inputPattern</a> is first looked up in our list of known skeletons.\nIf it's found there, then use the corresponding pattern for this locale.\nIf it's not, then treat <a>intl/intl.DateFormat.addPattern.inputPattern</a> as an explicit pattern.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{"inputPattern":{"name":"inputPattern","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"separator":{"name":"separator","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.String","inner":[]}],"value":"\" \"","annotations":[]}},"annotations":[]},"add_E":{"name":"add_E","qualifiedName":"intl/intl.DateFormat.add_E","comment":"","commentFrom":"intl.DateFormat.add_E","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_EEEE":{"name":"add_EEEE","qualifiedName":"intl/intl.DateFormat.add_EEEE","comment":"","commentFrom":"intl.DateFormat.add_EEEE","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_H":{"name":"add_H","qualifiedName":"intl/intl.DateFormat.add_H","comment":"","commentFrom":"intl.DateFormat.add_H","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_Hm":{"name":"add_Hm","qualifiedName":"intl/intl.DateFormat.add_Hm","comment":"","commentFrom":"intl.DateFormat.add_Hm","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_Hms":{"name":"add_Hms","qualifiedName":"intl/intl.DateFormat.add_Hms","comment":"","commentFrom":"intl.DateFormat.add_Hms","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_LLL":{"name":"add_LLL","qualifiedName":"intl/intl.DateFormat.add_LLL","comment":"","commentFrom":"intl.DateFormat.add_LLL","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_LLLL":{"name":"add_LLLL","qualifiedName":"intl/intl.DateFormat.add_LLLL","comment":"","commentFrom":"intl.DateFormat.add_LLLL","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_M":{"name":"add_M","qualifiedName":"intl/intl.DateFormat.add_M","comment":"","commentFrom":"intl.DateFormat.add_M","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_MEd":{"name":"add_MEd","qualifiedName":"intl/intl.DateFormat.add_MEd","comment":"","commentFrom":"intl.DateFormat.add_MEd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_MMM":{"name":"add_MMM","qualifiedName":"intl/intl.DateFormat.add_MMM","comment":"","commentFrom":"intl.DateFormat.add_MMM","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_MMMEd":{"name":"add_MMMEd","qualifiedName":"intl/intl.DateFormat.add_MMMEd","comment":"","commentFrom":"intl.DateFormat.add_MMMEd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_MMMM":{"name":"add_MMMM","qualifiedName":"intl/intl.DateFormat.add_MMMM","comment":"","commentFrom":"intl.DateFormat.add_MMMM","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_MMMMEEEEd":{"name":"add_MMMMEEEEd","qualifiedName":"intl/intl.DateFormat.add_MMMMEEEEd","comment":"","commentFrom":"intl.DateFormat.add_MMMMEEEEd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_MMMMd":{"name":"add_MMMMd","qualifiedName":"intl/intl.DateFormat.add_MMMMd","comment":"","commentFrom":"intl.DateFormat.add_MMMMd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_MMMd":{"name":"add_MMMd","qualifiedName":"intl/intl.DateFormat.add_MMMd","comment":"","commentFrom":"intl.DateFormat.add_MMMd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_Md":{"name":"add_Md","qualifiedName":"intl/intl.DateFormat.add_Md","comment":"","commentFrom":"intl.DateFormat.add_Md","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_QQQ":{"name":"add_QQQ","qualifiedName":"intl/intl.DateFormat.add_QQQ","comment":"","commentFrom":"intl.DateFormat.add_QQQ","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_QQQQ":{"name":"add_QQQQ","qualifiedName":"intl/intl.DateFormat.add_QQQQ","comment":"","commentFrom":"intl.DateFormat.add_QQQQ","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_d":{"name":"add_d","qualifiedName":"intl/intl.DateFormat.add_d","comment":"<p>The \"add_*\" methods append a particular skeleton to the format, or set\nit as the only format if none was previously set. These are primarily\nuseful for creating compound formats. For example</p>\n<pre><code>  new DateFormat.yMd().add_Hms();\n</code></pre>\n<p>would create a date format that prints both the date and the time.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_j":{"name":"add_j","qualifiedName":"intl/intl.DateFormat.add_j","comment":"","commentFrom":"intl.DateFormat.add_j","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_jm":{"name":"add_jm","qualifiedName":"intl/intl.DateFormat.add_jm","comment":"","commentFrom":"intl.DateFormat.add_jm","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_jms":{"name":"add_jms","qualifiedName":"intl/intl.DateFormat.add_jms","comment":"","commentFrom":"intl.DateFormat.add_jms","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_jmv":{"name":"add_jmv","qualifiedName":"intl/intl.DateFormat.add_jmv","comment":"","commentFrom":"intl.DateFormat.add_jmv","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_jmz":{"name":"add_jmz","qualifiedName":"intl/intl.DateFormat.add_jmz","comment":"","commentFrom":"intl.DateFormat.add_jmz","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_jv":{"name":"add_jv","qualifiedName":"intl/intl.DateFormat.add_jv","comment":"","commentFrom":"intl.DateFormat.add_jv","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_jz":{"name":"add_jz","qualifiedName":"intl/intl.DateFormat.add_jz","comment":"","commentFrom":"intl.DateFormat.add_jz","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_m":{"name":"add_m","qualifiedName":"intl/intl.DateFormat.add_m","comment":"","commentFrom":"intl.DateFormat.add_m","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_ms":{"name":"add_ms","qualifiedName":"intl/intl.DateFormat.add_ms","comment":"","commentFrom":"intl.DateFormat.add_ms","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_s":{"name":"add_s","qualifiedName":"intl/intl.DateFormat.add_s","comment":"","commentFrom":"intl.DateFormat.add_s","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_y":{"name":"add_y","qualifiedName":"intl/intl.DateFormat.add_y","comment":"","commentFrom":"intl.DateFormat.add_y","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yM":{"name":"add_yM","qualifiedName":"intl/intl.DateFormat.add_yM","comment":"","commentFrom":"intl.DateFormat.add_yM","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yMEd":{"name":"add_yMEd","qualifiedName":"intl/intl.DateFormat.add_yMEd","comment":"","commentFrom":"intl.DateFormat.add_yMEd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yMMM":{"name":"add_yMMM","qualifiedName":"intl/intl.DateFormat.add_yMMM","comment":"","commentFrom":"intl.DateFormat.add_yMMM","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yMMMEd":{"name":"add_yMMMEd","qualifiedName":"intl/intl.DateFormat.add_yMMMEd","comment":"","commentFrom":"intl.DateFormat.add_yMMMEd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yMMMM":{"name":"add_yMMMM","qualifiedName":"intl/intl.DateFormat.add_yMMMM","comment":"","commentFrom":"intl.DateFormat.add_yMMMM","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yMMMMEEEEd":{"name":"add_yMMMMEEEEd","qualifiedName":"intl/intl.DateFormat.add_yMMMMEEEEd","comment":"","commentFrom":"intl.DateFormat.add_yMMMMEEEEd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yMMMMd":{"name":"add_yMMMMd","qualifiedName":"intl/intl.DateFormat.add_yMMMMd","comment":"","commentFrom":"intl.DateFormat.add_yMMMMd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yMMMd":{"name":"add_yMMMd","qualifiedName":"intl/intl.DateFormat.add_yMMMd","comment":"","commentFrom":"intl.DateFormat.add_yMMMd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yMd":{"name":"add_yMd","qualifiedName":"intl/intl.DateFormat.add_yMd","comment":"","commentFrom":"intl.DateFormat.add_yMd","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yQQQ":{"name":"add_yQQQ","qualifiedName":"intl/intl.DateFormat.add_yQQQ","comment":"","commentFrom":"intl.DateFormat.add_yQQQ","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"add_yQQQQ":{"name":"add_yQQQQ","qualifiedName":"intl/intl.DateFormat.add_yQQQQ","comment":"","commentFrom":"intl.DateFormat.add_yQQQQ","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"intl/intl.DateFormat","inner":[]}],"parameters":{},"annotations":[]},"allLocalesWithSymbols":{"name":"allLocalesWithSymbols","qualifiedName":"intl/intl.DateFormat.allLocalesWithSymbols","comment":"<p>Returns a list of all locales for which we have date formatting\ninformation.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"format":{"name":"format","qualifiedName":"intl/intl.DateFormat.format","comment":"<p>Return a string representing <a>intl/intl.DateFormat.format.date</a> formatted according to our locale\nand internal format.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"date":{"name":"date","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.DateTime","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"formatDuration":{"name":"formatDuration","qualifiedName":"intl/intl.DateFormat.formatDuration","comment":"<p>Returns a date string indicating how long ago (3 hours, 2 minutes)\nsomething has happened or how long in the future something will happen\ngiven a <a>intl/intl.DateFormat.formatDuration.reference</a> DateTime relative to the current time.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"reference":{"name":"reference","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.DateTime","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"formatDurationFrom":{"name":"formatDurationFrom","qualifiedName":"intl/intl.DateFormat.formatDurationFrom","comment":"<p>Formats a string indicating how long ago (negative <a>intl/intl.DateFormat.formatDurationFrom.duration</a>) or how far\nin the future (positive <a>intl/intl.DateFormat.formatDurationFrom.duration</a>) some time is with respect to a\nreference <a>intl/intl.DateFormat.formatDurationFrom.date</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"duration":{"name":"duration","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Duration","inner":[]}],"value":null,"annotations":[]},"date":{"name":"date","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.DateTime","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"localeExists":{"name":"localeExists","qualifiedName":"intl/intl.DateFormat.localeExists","comment":"<p>Return true if the locale exists, or if it is null. The null case\nis interpreted to mean that we use the default locale.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"localeName":{"name":"localeName","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"parse":{"name":"parse","qualifiedName":"intl/intl.DateFormat.parse","comment":"<p>Given user input, attempt to parse the <a>intl/intl.DateFormat.parse.inputString</a> into the anticipated\nformat, treating it as being in the local timezone. If <a>intl/intl.DateFormat.parse.inputString</a> does\nnot match our format, throws a <a>dart-core.FormatException</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.DateTime","inner":[]}],"parameters":{"inputString":{"name":"inputString","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"utc":{"name":"utc","optional":true,"named":false,"default":true,"type":[{"outer":"dynamic","inner":[]}],"value":"false","annotations":[]}},"annotations":[]},"parsePattern":{"name":"parsePattern","qualifiedName":"intl/intl.DateFormat.parsePattern","comment":"<p>Parse the template pattern and return a list of field objects.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[]}],"parameters":{"pattern":{"name":"pattern","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"parseUTC":{"name":"parseUTC","qualifiedName":"intl/intl.DateFormat.parseUTC","comment":"<p>Given user input, attempt to parse the <a>intl/intl.DateFormat.parseUTC.inputString</a> into the anticipated\nformat, treating it as being in UTC.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.DateTime","inner":[]}],"parameters":{"inputString":{"name":"inputString","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"intl/intl.DateFormat.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>intl/intl.DateFormat.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"intl/intl.DateFormat.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"intl/intl.DateFormat.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>intl/intl.DateFormat.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>intl/intl.DateFormat.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"intl/intl.DateFormat.noSuchMethod","comment":"<p><a>intl/intl.DateFormat.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>intl/intl.DateFormat.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>intl/intl.DateFormat.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>intl/intl.DateFormat.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"intl/intl.DateFormat.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}