{"name":"NumberSymbols","qualifiedName":"intl/number_symbols.NumberSymbols","comment":"<p>This holds onto information about how a particular locale formats numbers. It\ncontains strings for things like the decimal separator, digit to use for \"0\"\nand infinity. We expect the data for instances to be generated out of ICU\nor a similar reference source.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"CURRENCY_PATTERN":{"name":"CURRENCY_PATTERN","qualifiedName":"intl/number_symbols.NumberSymbols.CURRENCY_PATTERN","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"DECIMAL_PATTERN":{"name":"DECIMAL_PATTERN","qualifiedName":"intl/number_symbols.NumberSymbols.DECIMAL_PATTERN","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"DECIMAL_SEP":{"name":"DECIMAL_SEP","qualifiedName":"intl/number_symbols.NumberSymbols.DECIMAL_SEP","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"DEF_CURRENCY_CODE":{"name":"DEF_CURRENCY_CODE","qualifiedName":"intl/number_symbols.NumberSymbols.DEF_CURRENCY_CODE","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"EXP_SYMBOL":{"name":"EXP_SYMBOL","qualifiedName":"intl/number_symbols.NumberSymbols.EXP_SYMBOL","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"GROUP_SEP":{"name":"GROUP_SEP","qualifiedName":"intl/number_symbols.NumberSymbols.GROUP_SEP","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"INFINITY":{"name":"INFINITY","qualifiedName":"intl/number_symbols.NumberSymbols.INFINITY","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"MINUS_SIGN":{"name":"MINUS_SIGN","qualifiedName":"intl/number_symbols.NumberSymbols.MINUS_SIGN","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"NAME":{"name":"NAME","qualifiedName":"intl/number_symbols.NumberSymbols.NAME","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"NAN":{"name":"NAN","qualifiedName":"intl/number_symbols.NumberSymbols.NAN","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"PERCENT":{"name":"PERCENT","qualifiedName":"intl/number_symbols.NumberSymbols.PERCENT","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"PERCENT_PATTERN":{"name":"PERCENT_PATTERN","qualifiedName":"intl/number_symbols.NumberSymbols.PERCENT_PATTERN","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"PERMILL":{"name":"PERMILL","qualifiedName":"intl/number_symbols.NumberSymbols.PERMILL","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"PLUS_SIGN":{"name":"PLUS_SIGN","qualifiedName":"intl/number_symbols.NumberSymbols.PLUS_SIGN","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"SCIENTIFIC_PATTERN":{"name":"SCIENTIFIC_PATTERN","qualifiedName":"intl/number_symbols.NumberSymbols.SCIENTIFIC_PATTERN","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"ZERO_DIGIT":{"name":"ZERO_DIGIT","qualifiedName":"intl/number_symbols.NumberSymbols.ZERO_DIGIT","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"intl/number_symbols.NumberSymbols.NumberSymbols-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":true,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"NAME":{"name":"NAME","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"DECIMAL_SEP":{"name":"DECIMAL_SEP","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"GROUP_SEP":{"name":"GROUP_SEP","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"PERCENT":{"name":"PERCENT","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"ZERO_DIGIT":{"name":"ZERO_DIGIT","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"PLUS_SIGN":{"name":"PLUS_SIGN","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"MINUS_SIGN":{"name":"MINUS_SIGN","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"EXP_SYMBOL":{"name":"EXP_SYMBOL","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"PERMILL":{"name":"PERMILL","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"INFINITY":{"name":"INFINITY","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"NAN":{"name":"NAN","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"DECIMAL_PATTERN":{"name":"DECIMAL_PATTERN","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"SCIENTIFIC_PATTERN":{"name":"SCIENTIFIC_PATTERN","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"PERCENT_PATTERN":{"name":"PERCENT_PATTERN","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"CURRENCY_PATTERN":{"name":"CURRENCY_PATTERN","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"DEF_CURRENCY_CODE":{"name":"DEF_CURRENCY_CODE","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"toString":{"name":"toString","qualifiedName":"intl/number_symbols.NumberSymbols.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"intl/number_symbols.NumberSymbols.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>intl/number_symbols.NumberSymbols.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"intl/number_symbols.NumberSymbols.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"intl/number_symbols.NumberSymbols.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>intl/number_symbols.NumberSymbols.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>intl/number_symbols.NumberSymbols.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"intl/number_symbols.NumberSymbols.noSuchMethod","comment":"<p><a>intl/number_symbols.NumberSymbols.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>intl/number_symbols.NumberSymbols.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>intl/number_symbols.NumberSymbols.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>intl/number_symbols.NumberSymbols.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"intl/number_symbols.NumberSymbols.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}