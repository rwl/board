{"name":"ExrPart","qualifiedName":"image/image.ExrPart","comment":"","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"DECREASING_Y":{"name":"DECREASING_Y","qualifiedName":"image/image.ExrPart.DECREASING_Y","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"INCREASING_Y":{"name":"INCREASING_Y","qualifiedName":"image/image.ExrPart.INCREASING_Y","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"MIPMAP_LEVELS":{"name":"MIPMAP_LEVELS","qualifiedName":"image/image.ExrPart.MIPMAP_LEVELS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"ONE_LEVEL":{"name":"ONE_LEVEL","qualifiedName":"image/image.ExrPart.ONE_LEVEL","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"RANDOM_Y":{"name":"RANDOM_Y","qualifiedName":"image/image.ExrPart.RANDOM_Y","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"RIPMAP_LEVELS":{"name":"RIPMAP_LEVELS","qualifiedName":"image/image.ExrPart.RIPMAP_LEVELS","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"ROUND_DOWN":{"name":"ROUND_DOWN","qualifiedName":"image/image.ExrPart.ROUND_DOWN","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"ROUND_UP":{"name":"ROUND_UP","qualifiedName":"image/image.ExrPart.ROUND_UP","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"TYPE_DEEP_SCANLINE":{"name":"TYPE_DEEP_SCANLINE","qualifiedName":"image/image.ExrPart.TYPE_DEEP_SCANLINE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"TYPE_DEEP_TILE":{"name":"TYPE_DEEP_TILE","qualifiedName":"image/image.ExrPart.TYPE_DEEP_TILE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"TYPE_SCANLINE":{"name":"TYPE_SCANLINE","qualifiedName":"image/image.ExrPart.TYPE_SCANLINE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"TYPE_TILE":{"name":"TYPE_TILE","qualifiedName":"image/image.ExrPart.TYPE_TILE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"attributes":{"name":"attributes","qualifiedName":"image/image.ExrPart.attributes","comment":"<p>The extra attributes read from the part header.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"image/image.ExrAttribute","inner":[]}]}],"annotations":[]},"channels":{"name":"channels","qualifiedName":"image/image.ExrPart.channels","comment":"<p>The channels present in this part.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"image/image.ExrChannel","inner":[]}]}],"annotations":[]},"chromaticities":{"name":"chromaticities","qualifiedName":"image/image.ExrPart.chromaticities","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-typed_data.Float32List","inner":[]}],"annotations":[]},"dataWindow":{"name":"dataWindow","qualifiedName":"image/image.ExrPart.dataWindow","comment":"<p>The data window (see the openexr documentation).</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"annotations":[]},"displayWindow":{"name":"displayWindow","qualifiedName":"image/image.ExrPart.displayWindow","comment":"<p>The display window (see the openexr documentation).</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"annotations":[]},"framebuffer":{"name":"framebuffer","qualifiedName":"image/image.ExrPart.framebuffer","comment":"<p>The framebuffer for this exr part.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"image/image.HdrImage","inner":[]}],"annotations":[]},"height":{"name":"height","qualifiedName":"image/image.ExrPart.height","comment":"<p>Height of the data window</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"pixelAspectRatio":{"name":"pixelAspectRatio","qualifiedName":"image/image.ExrPart.pixelAspectRatio","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"screenWindowCenterX":{"name":"screenWindowCenterX","qualifiedName":"image/image.ExrPart.screenWindowCenterX","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"screenWindowCenterY":{"name":"screenWindowCenterY","qualifiedName":"image/image.ExrPart.screenWindowCenterY","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"screenWindowWidth":{"name":"screenWindowWidth","qualifiedName":"image/image.ExrPart.screenWindowWidth","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"width":{"name":"width","qualifiedName":"image/image.ExrPart.width","comment":"<p>width of the data window</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"bottom":{"name":"bottom","qualifiedName":"image/image.ExrPart.bottom","comment":"","commentFrom":"image.ExrPart.bottom","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"isValid":{"name":"isValid","qualifiedName":"image/image.ExrPart.isValid","comment":"<p>Was this part successfully decoded?</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"left":{"name":"left","qualifiedName":"image/image.ExrPart.left","comment":"","commentFrom":"image.ExrPart.left","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"right":{"name":"right","qualifiedName":"image/image.ExrPart.right","comment":"","commentFrom":"image.ExrPart.right","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"top":{"name":"top","qualifiedName":"image/image.ExrPart.top","comment":"","commentFrom":"image.ExrPart.top","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"image/image.ExrPart.ExrPart-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"_tiled":{"name":"_tiled","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]},"input":{"name":"input","optional":false,"named":false,"default":false,"type":[{"outer":"image/image.InputBuffer","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"image/image.ExrPart.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>image/image.ExrPart.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"image/image.ExrPart.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"image/image.ExrPart.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>image/image.ExrPart.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>image/image.ExrPart.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"image/image.ExrPart.noSuchMethod","comment":"<p><a>image/image.ExrPart.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>image/image.ExrPart.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>image/image.ExrPart.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>image/image.ExrPart.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"image/image.ExrPart.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}